services:
  postgres-0:
    image: postgres:15-alpine
    container_name: postgres-0
    expose:
      - "5432"
    ports:
      - "8432:5432"
    volumes:
      - "postgres-0:/var/lib/postgresql/data"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=metadata
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    restart: always

  minio-0:
    image: minio/minio:latest
    container_name: minio-0
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: "minioadmin" 
      MINIO_ROOT_PASSWORD: "minioadmin"
    volumes:
      - minio-0:/data
    command: server /data --console-address ":9001"

  redpanda-0:
    image: redpandadata/redpanda:latest
    container_name: redpanda-0
    volumes:
      - "redpanda-0:/var/lib/redpanda/data"
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers'
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers'
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda-0:33145
      - --advertise-rpc-addr redpanda-0:33145
      # Mode dev-container uses well-known configuration properties for development in containers.
      - --mode dev-container
      # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
      - --smp 1
      - --default-log-level=info

  redpanda-console-0:
    image: redpandadata/console:latest
    container_name: redpanda-console-0
    volumes:
      - ./console-config.yml:/app/config.yml
    environment:
      CONFIG_FILEPATH: /app/config.yml
    ports:
      - 8080:8080
    depends_on:
      - redpanda-0

  risingwave-standalone-0:
    image: risingwavelabs/risingwave:v2.2.0
    container_name: risingwave-standalone-0
    command:
      standalone
      --meta-opts "
        --listen-addr 0.0.0.0:5690
        --dashboard-host 0.0.0.0:5691
        --advertise-addr 0.0.0.0:5690
        --backend sql
        --sql-endpoint postgres://postgres:@postgres-0:5432/metadata
        --state-store hummock+fs:///data/state
        --data-directory hummock_001
        --config-path /risingwave.toml"
      --compute-opts "
        --config-path /risingwave.toml
        --listen-addr 0.0.0.0:5688
        --advertise-addr 0.0.0.0:5688
        --async-stack-trace verbose
        --role both
        --meta-address http://0.0.0.0:5690"
      --frontend-opts "
        --config-path /risingwave.toml
        --listen-addr 0.0.0.0:4566
        --advertise-addr 0.0.0.0:4566
        --meta-addr http://0.0.0.0:5690"
      --compactor-opts "
        --listen-addr 0.0.0.0:6660
        --advertise-addr 0.0.0.0:6660
        --meta-address http://0.0.0.0:5690"
    expose:
      - "6660"
      - "4566"
      - "5688"
      - "5690"
      - "5691"
    ports:
      - "4566:4566"
      - "5690:5690"
      - "5691:5691"
    volumes:
      - "./risingwave.toml:/risingwave.toml"
      - "statestore-0:/data/state"
    restart: always
    deploy:
      resources:
        limits:
          memory: 28G
        reservations:
          memory: 28G
    depends_on:
      - postgres-0
      - minio-0
      - redpanda-0

  grafana-0:
    image: "grafana/grafana-oss:latest"
    container_name: grafana-0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=grafana
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - "grafana-0:/var/lib/grafana"
    restart: always
    depends_on:
      - risingwave-standalone-0 


volumes:
  statestore-0:
    external: false
  postgres-0:
    external: false
  minio-0:
    external: false
  grafana-0:
    external: false
  redpanda-0:
    external: false